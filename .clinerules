# Rules and Conventions for the Eltako Home Assistant Project

## Code Conventions
- Code follows PEP 8 conventions for Python style
- Class names use CamelCase (e.g., EltakoDongle)
- Function and variable names use snake_case (e.g., get_device_id)
- Constants are in ALL_CAPS_WITH_UNDERSCORES
- Documentation uses Google-style docstrings

## Work Patterns
- Significant modifications should be tested on a development installation
- Existing functionality should not be altered without valid reason
- Support for existing devices must be maintained at all costs

## Device Management
- Each device type has its own entity class
- Device IDs are managed as hexadecimal strings
- The teach-in process is documented for each device type

## Documentation Preferences
- User documentation should be clear and precise
- Configuration steps should be detailed with examples
- Images and diagrams are appreciated to illustrate complex concepts

## Development Workflow
- Exploratory: Understand existing code before making changes
- Evolutionary: Add features without breaking existing ones
- Documented: Keep documentation up to date with the code

## Implementation Notes
- Asynchronous code is preferred for I/O operations
- Exceptions should be handled gracefully
- Debug messages should be informative but not excessive 